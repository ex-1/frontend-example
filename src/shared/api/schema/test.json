{
	"openapi": "3.1.0",
	"info": { "title": "Zerkaltce", "version": "0.1.0" },
	"paths": {
		"/metrics": {
			"get": {
				"summary": "Metrics",
				"description": "Endpoint that serves Prometheus metrics.",
				"operationId": "metrics_metrics_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				}
			}
		},
		"/api/auth/register": {
			"post": {
				"tags": ["auth"],
				"summary": "Register:Register",
				"operationId": "register_register_api_auth_register_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/UserCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/UserRead" }
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorModel" },
								"examples": {
									"REGISTER_USER_ALREADY_EXISTS": {
										"summary": "A user with this email already exists.",
										"value": { "detail": "REGISTER_USER_ALREADY_EXISTS" }
									},
									"REGISTER_INVALID_PASSWORD": {
										"summary": "Password validation failed.",
										"value": {
											"detail": {
												"code": "REGISTER_INVALID_PASSWORD",
												"reason": "Password should beat least 3 characters"
											}
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/jwt/login": {
			"post": {
				"tags": ["auth"],
				"summary": "Auth:Jwt.Login",
				"operationId": "auth_jwt_login_api_auth_jwt_login_post",
				"requestBody": {
					"content": {
						"application/x-www-form-urlencoded": {
							"schema": {
								"$ref": "#/components/schemas/Body_auth_jwt_login_api_auth_jwt_login_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorModel" },
								"examples": {
									"LOGIN_BAD_CREDENTIALS": {
										"summary": "Bad credentials or the user is inactive.",
										"value": { "detail": "LOGIN_BAD_CREDENTIALS" }
									},
									"LOGIN_USER_NOT_VERIFIED": {
										"summary": "The user is not verified.",
										"value": { "detail": "LOGIN_USER_NOT_VERIFIED" }
									}
								}
							}
						}
					},
					"204": { "description": "No Content" },
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/jwt/logout": {
			"post": {
				"tags": ["auth"],
				"summary": "Auth:Jwt.Logout",
				"operationId": "auth_jwt_logout_api_auth_jwt_logout_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"401": { "description": "Missing token or inactive user." },
					"204": { "description": "No Content" }
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/auth/forgot-password": {
			"post": {
				"tags": ["auth"],
				"summary": "Reset:Forgot Password",
				"description": "Забыл пароль, идет отправка на почту ссылки для сброса пароля",
				"operationId": "reset_forgot_password_api_auth_forgot_password_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Body_reset_forgot_password_api_auth_forgot_password_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/reset-password": {
			"post": {
				"tags": ["auth"],
				"summary": "Reset:Reset Password",
				"operationId": "reset_reset_password_api_auth_reset_password_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ResetPasswordRequest" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"400": {
						"description": "Bad Request",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorModel" },
								"examples": {
									"RESET_PASSWORD_BAD_TOKEN": {
										"summary": "Bad or expired token.",
										"value": { "detail": "RESET_PASSWORD_BAD_TOKEN" }
									},
									"RESET_PASSWORD_INVALID_PASSWORD": {
										"summary": "Password validation failed.",
										"value": {
											"detail": {
												"code": "RESET_PASSWORD_INVALID_PASSWORD",
												"reason": "Password should be at least 3 characters"
											}
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/reset-password-token/{token}": {
			"get": {
				"tags": ["auth"],
				"summary": "Reset Password Link",
				"description": "По этой ссылке переходит пользователь для сброса пароля, токен сетится в куки,\nдалее его надо отпарвить в запросе /auth/reset-password в token",
				"operationId": "reset_password_link_api_auth_reset_password_token__token__get",
				"parameters": [
					{
						"name": "token",
						"in": "path",
						"required": true,
						"schema": { "type": "string", "title": "Token" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/change-password": {
			"post": {
				"tags": ["auth"],
				"summary": "Change Password",
				"description": "Изменение пароля через личный кабинет путем ввода текущего и нового",
				"operationId": "change_password_api_auth_change_password_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ChangePassword" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/auth/register/code": {
			"post": {
				"tags": ["auth"],
				"summary": "Send Registration Email Verify Code",
				"description": "Отправить код подтверждения почты при регистрации",
				"operationId": "send_registration_email_verify_code_api_auth_register_code_post",
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Email" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/auth/send-email-verify-code": {
			"post": {
				"tags": ["auth"],
				"summary": "Send Email Verify Code",
				"operationId": "send_email_verify_code_api_auth_send_email_verify_code_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/auth/send-phone-verify-code": {
			"post": {
				"tags": ["auth"],
				"summary": "Send Phone Verify Code",
				"operationId": "send_phone_verify_code_api_auth_send_phone_verify_code_post",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/auth/sidebar": {
			"get": {
				"tags": ["auth"],
				"summary": "Get Sidebar",
				"operationId": "get_sidebar_api_auth_sidebar_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/profile/update": {
			"post": {
				"tags": ["profile"],
				"summary": "Update Profile",
				"operationId": "update_profile_api_profile_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProfileUpdate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/profile/update-user-data": {
			"post": {
				"tags": ["profile"],
				"summary": "Update User Data",
				"operationId": "update_user_data_api_profile_update_user_data_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "code",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Code" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/profile": {
			"get": {
				"tags": ["profile"],
				"summary": "Get Profile",
				"operationId": "get_profile_api_profile_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProfileRead" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/clinic-profile/update": {
			"post": {
				"tags": ["clinic-profile"],
				"summary": "Update Profile",
				"operationId": "update_profile_api_clinic_profile_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ClinicProfileUpdate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/clinic-profile/update-user-data": {
			"post": {
				"tags": ["clinic-profile"],
				"summary": "Update User Data",
				"operationId": "update_user_data_api_clinic_profile_update_user_data_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "code",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Code" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-profile": {
			"get": {
				"tags": ["clinic-profile"],
				"summary": "Get Profile",
				"operationId": "get_profile_api_clinic_profile_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicProfileRead" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/clinic-profile/clinic-information": {
			"post": {
				"tags": ["clinic-profile"],
				"summary": "Put Clinic Info",
				"operationId": "put_clinic_info_api_clinic_profile_clinic_information_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "text",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Text" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicInformationRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["clinic-profile"],
				"summary": "Update Clinic Info",
				"operationId": "update_clinic_info_api_clinic_profile_clinic_information_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "text",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Text" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicInformationRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["clinic-profile"],
				"summary": "Get Clinic Info",
				"operationId": "get_clinic_info_api_clinic_profile_clinic_information_get",
				"security": [{ "APIKeyCookie": [] }],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicInformationRead" }
							}
						}
					}
				}
			}
		},
		"/api/medic-profile/update": {
			"post": {
				"tags": ["medic-profile"],
				"summary": "Update Profile",
				"operationId": "update_profile_api_medic_profile_update_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/MedicProfileUpdate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/medic-profile/update-user-data": {
			"post": {
				"tags": ["medic-profile"],
				"summary": "Update User Data",
				"operationId": "update_user_data_api_medic_profile_update_user_data_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "code",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Code" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic-profile": {
			"get": {
				"tags": ["medic-profile"],
				"summary": "Get Profile",
				"operationId": "get_profile_api_medic_profile_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/MedicProfileRead" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/user-visit": {
			"post": {
				"tags": ["user-visit"],
				"summary": "Add Visit",
				"description": "Добавить визит фактический по схеме VisitUserCreate",
				"operationId": "add_visit_api_user_visit_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/VisitUserCreate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ActualVisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["user-visit"],
				"summary": "Get Visit",
				"description": "Получить визит по id",
				"operationId": "get_visit_api_user_visit_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/register-visit": {
			"post": {
				"tags": ["user-visit"],
				"summary": "Register Visit",
				"description": "Сделать из рекомендованного визита запланированный",
				"operationId": "register_visit_api_user_visit_register_visit_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Procedure Id" }
					},
					{
						"name": "date",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Date" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/page-query": {
			"get": {
				"tags": ["user-visit"],
				"summary": "Find Visits",
				"description": "Получить визиты любого типа, с фильтром по дате или без, с поиском по имени или нет",
				"operationId": "find_visits_api_user_visit_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "types",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Types" }
					},
					{
						"name": "date_from",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date From" }
					},
					{
						"name": "date_to",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date To" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitUserRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/approve-fact": {
			"post": {
				"tags": ["user-visit"],
				"summary": "Approve Visit",
				"description": "Подтвердить визит пациентом",
				"operationId": "approve_visit_api_user_visit_approve_fact_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/update": {
			"put": {
				"tags": ["user-visit"],
				"summary": "Update Visit",
				"description": "Обновить визит",
				"operationId": "update_visit_api_user_visit_update_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/VisitUserUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ActualVisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/cancel": {
			"post": {
				"tags": ["user-visit"],
				"summary": "Cancel Visit",
				"description": "Отменить визит",
				"operationId": "cancel_visit_api_user_visit_cancel_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-visit/delete": {
			"delete": {
				"tags": ["user-visit"],
				"summary": "Delete Visit",
				"description": "Обновить визит",
				"operationId": "delete_visit_api_user_visit_delete_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/picture/dictionary": {
			"post": {
				"tags": ["picture"],
				"summary": "Upload To Dictionary",
				"operationId": "upload_to_dictionary_api_picture_dictionary_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "preparation_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Preparation Id" }
					},
					{
						"name": "device_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Device Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_to_dictionary_api_picture_dictionary_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["picture"],
				"summary": "Delete From Dictionary",
				"operationId": "delete_from_dictionary_api_picture_dictionary_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "picture_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Picture Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/picture/profile": {
			"post": {
				"tags": ["picture"],
				"summary": "Upload To Profile",
				"description": "Добавить фото профиля",
				"operationId": "upload_to_profile_api_picture_profile_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "master",
						"in": "query",
						"required": true,
						"schema": { "type": "boolean", "title": "Master" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_to_profile_api_picture_profile_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["picture"],
				"summary": "Get From Profile",
				"description": "Получить фото профиля",
				"operationId": "get_from_profile_api_picture_profile_get",
				"security": [{ "APIKeyCookie": [] }],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				}
			},
			"delete": {
				"tags": ["picture"],
				"summary": "Delete From Profile",
				"description": "Удалить фото профиля",
				"operationId": "delete_from_profile_api_picture_profile_delete",
				"security": [{ "APIKeyCookie": [] }],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					}
				}
			}
		},
		"/api/picture/visit": {
			"post": {
				"tags": ["picture"],
				"summary": "Upload To Visit",
				"description": "Загрузить фотографию в визит",
				"operationId": "upload_to_visit_api_picture_visit_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_to_visit_api_picture_visit_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["picture"],
				"summary": "Delete From Visit",
				"description": "Удалить из визита",
				"operationId": "delete_from_visit_api_picture_visit_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "file_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "File Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/picture/newsbreak": {
			"post": {
				"tags": ["picture"],
				"summary": "Upload To Newsbreak",
				"description": "Загрузка картинки инфоповода, доступен админу клиники",
				"operationId": "upload_to_newsbreak_api_picture_newsbreak_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "newsbreak_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Newsbreak Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_to_newsbreak_api_picture_newsbreak_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NewsbreakClinicRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["picture"],
				"summary": "Delete From Newsbreak",
				"description": "Удалить фото из инфоповода, доступен админу клиники",
				"operationId": "delete_from_newsbreak_api_picture_newsbreak_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "picture_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Picture Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NewsbreakClinicRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Dictionary",
				"description": "Получить список всех без пагинации",
				"operationId": "get_dictionary_api_dictionary_get",
				"parameters": [
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryEntry" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/CityRead" },
									"title": "Response Get Dictionary Api Dictionary Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"post": {
				"tags": ["dictionary"],
				"summary": "Add Dictionary Unit",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "add_dictionary_unit_api_dictionary_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Name" }
					},
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryEntry" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/DictionaryRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["dictionary"],
				"summary": "Update Dictionary Unit",
				"description": "Обновить сущность, доступно админу только",
				"operationId": "update_dictionary_unit_api_dictionary_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "name",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Name" }
					},
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					},
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryEntry" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/DictionaryRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["dictionary"],
				"summary": "Delete Dictionary Unit",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "delete_dictionary_unit_api_dictionary_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					},
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryEntry" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/page-query": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Dictionary Pageable",
				"description": "Получить список с учетом страницы (начало с 0), лимита (минимум 5) и части названия (необязательно)",
				"operationId": "get_dictionary_pageable_api_dictionary_page_query_get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryEntry" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_CityRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/devices/page-query": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Devices Pageable",
				"description": "Получить список с учетом страницы (начало с 0), лимита (минимум 5) и части названия (необязательно)",
				"operationId": "get_devices_pageable_api_dictionary_devices_page_query_get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_DeviceRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/preparations/page-query": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Preparations Pageable",
				"description": "Получить список с учетом страницы (начало с 0), лимита (минимум 5) и части названия (необязательно)",
				"operationId": "get_preparations_pageable_api_dictionary_preparations_page_query_get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_PreparationRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/organizations": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Legal Data",
				"operationId": "get_legal_data_api_dictionary_organizations_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "data",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Data" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/Organization" },
									"title": "Response Get Legal Data Api Dictionary Organizations Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/ages": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Ages",
				"description": "Получить список всех без пагинации",
				"operationId": "get_ages_api_dictionary_ages_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/AgeRead" },
									"title": "Response Get Ages Api Dictionary Ages Get"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["dictionary"],
				"summary": "Add Age",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "add_age_api_dictionary_ages_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/AgeCreate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/AgeRead" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["dictionary"],
				"summary": "Update Age",
				"description": "Изменить сущность, доступно админу только",
				"operationId": "update_age_api_dictionary_ages_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "age_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Age Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/AgeUpdate" } }
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": { "schema": { "$ref": "#/components/schemas/AgeRead" } }
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["dictionary"],
				"summary": "Delete Dictionary Device",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "delete_dictionary_device_api_dictionary_ages_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/intervals": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Get Intervals",
				"description": "Получить список всех без пагинации",
				"operationId": "get_intervals_api_dictionary_intervals_get",
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/PeriodRead" },
									"title": "Response Get Intervals Api Dictionary Intervals Get"
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": ["dictionary"],
				"summary": "Add Period",
				"operationId": "add_period_api_dictionary_intervals_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "count",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Count" }
					},
					{
						"name": "period",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/PeriodValue" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PeriodRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["dictionary"],
				"summary": "Update Period",
				"description": "Изменить сущность, доступно админу только",
				"operationId": "update_period_api_dictionary_intervals_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "period_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Period Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PeriodUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PeriodRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["dictionary"],
				"summary": "Delete Dictionary Device",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "delete_dictionary_device_api_dictionary_intervals_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/download": {
			"get": {
				"tags": ["dictionary"],
				"summary": "Download",
				"description": "Скачать",
				"operationId": "download_api_dictionary_download_get",
				"parameters": [
					{
						"name": "entry",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/DictionaryDownloadEntry" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/devices": {
			"post": {
				"tags": ["dictionary"],
				"summary": "Add Device",
				"description": "Добавить устройство, доступно только админу.",
				"operationId": "add_device_api_dictionary_devices_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_add_device_api_dictionary_devices_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/DeviceRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["dictionary"],
				"summary": "Delete Dictionary Device",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "delete_dictionary_device_api_dictionary_devices_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["dictionary"],
				"summary": "Update Device",
				"operationId": "update_device_api_dictionary_devices_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "device_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Device Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/DeviceUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/DeviceRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/preparations": {
			"post": {
				"tags": ["dictionary"],
				"summary": "Add Preparation",
				"description": "Добавить подготовку, доступно только админу.",
				"operationId": "add_preparation_api_dictionary_preparations_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_add_preparation_api_dictionary_preparations_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PreparationRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["dictionary"],
				"summary": "Delete Dictionary Preparation",
				"description": "Добавить сущность, доступно админу только",
				"operationId": "delete_dictionary_preparation_api_dictionary_preparations_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["dictionary"],
				"summary": "Update Preparation",
				"operationId": "update_preparation_api_dictionary_preparations_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "preparation_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Preparation Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PreparationUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PreparationRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/dictionary/upload": {
			"post": {
				"tags": ["dictionary"],
				"summary": "Upload Dictionary Units",
				"description": "Загрузить таблицу с брендами",
				"operationId": "upload_dictionary_units_api_dictionary_upload_post",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_dictionary_units_api_dictionary_upload_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/clinic-visit/for-medic": {
			"get": {
				"tags": ["clinic-visit"],
				"summary": "Get Visits For Medic",
				"description": "Получить список визитов для медика в статусе CREATED подходящие по специализации",
				"operationId": "get_visits_for_medic_api_clinic_visit_for_medic_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitAdminRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit/set-time": {
			"post": {
				"tags": ["clinic-visit"],
				"summary": "Set Time To Visit",
				"description": "Установить время проведения процедуры",
				"operationId": "set_time_to_visit_api_clinic_visit_set_time_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					},
					{
						"name": "time",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Time" }
					},
					{
						"name": "record_date",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Record Date" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitAdminRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit/approve-appointment": {
			"post": {
				"tags": ["clinic-visit"],
				"summary": "Approve Appointment",
				"description": "Подтвердить запись медиком",
				"operationId": "approve_appointment_api_clinic_visit_approve_appointment_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitAdminRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit/approve-fact": {
			"post": {
				"tags": ["clinic-visit"],
				"summary": "Approve Visit",
				"description": "Подтвердить визит медиком",
				"operationId": "approve_visit_api_clinic_visit_approve_fact_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					},
					{
						"name": "preparation_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Preparation Id" }
					},
					{
						"name": "device_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Device Id" }
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_approve_visit_api_clinic_visit_approve_fact_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitAdminRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit": {
			"get": {
				"tags": ["clinic-visit"],
				"summary": "Get Visit",
				"description": "Получить визит по id",
				"operationId": "get_visit_api_clinic_visit_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitAdminRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["clinic-visit"],
				"summary": "Delete Visit",
				"description": "Удалить визит",
				"operationId": "delete_visit_api_clinic_visit_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "visit_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Visit Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit/page-query": {
			"get": {
				"tags": ["clinic-visit"],
				"summary": "Find Visits",
				"description": "Получить визиты всех типов, с фильтром по дате и пагинацией - для клиники и врача",
				"operationId": "find_visits_api_clinic_visit_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "device_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Device Id" }
					},
					{
						"name": "preparation_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Preparation Id" }
					},
					{
						"name": "date_from",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date From" }
					},
					{
						"name": "date_to",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date To" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Procedure Id" }
					},
					{
						"name": "type",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/VisitType" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitAdminRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-visit/download": {
			"get": {
				"tags": ["clinic-visit"],
				"summary": "Find Visits",
				"description": "Получить визиты всех типов, с фильтром по дате и пагинацией - для клиники и врача",
				"operationId": "find_visits_api_clinic_visit_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "device_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Device Id" }
					},
					{
						"name": "preparation_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Preparation Id" }
					},
					{
						"name": "date_from",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date From" }
					},
					{
						"name": "date_to",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date To" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Procedure Id" }
					},
					{
						"name": "type",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/VisitType" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/create": {
			"post": {
				"tags": ["photo-session"],
				"summary": "Create Session",
				"description": "Создание пустой фото-сессии",
				"operationId": "create_session_api_photo_session_create_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PhotoSessionCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PhotoSessionRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/photo-session/upload-photo": {
			"post": {
				"tags": ["photo-session"],
				"summary": "Upload Photo",
				"description": "Загрузка фотографий в сессию",
				"operationId": "upload_photo_api_photo_session_upload_photo_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "angle_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Angle Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_photo_api_photo_session_upload_photo_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PhotoSessionRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/page-query": {
			"get": {
				"tags": ["photo-session"],
				"summary": "Get Sessions",
				"description": "Получить список с учетом страницы (начало с 0), лимита (минимум 5)",
				"operationId": "get_sessions_api_photo_session_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_PhotoSessionRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/update": {
			"put": {
				"tags": ["photo-session"],
				"summary": "Update Session",
				"description": "Обновить дату сессии",
				"operationId": "update_session_api_photo_session_update_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "session_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Session Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PhotoSessionCreate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PhotoSessionRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/delete-photo": {
			"delete": {
				"tags": ["photo-session"],
				"summary": "Delete Photo",
				"description": "Удалить фото по id фото",
				"operationId": "delete_photo_api_photo_session_delete_photo_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "photo_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Photo Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PhotoSessionRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/delete-session": {
			"delete": {
				"tags": ["photo-session"],
				"summary": "Delete Session",
				"description": "Удалить сессию по id сессии",
				"operationId": "delete_session_api_photo_session_delete_session_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "photo_session_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Photo Session Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/photo-session/angle-page-query": {
			"get": {
				"tags": ["photo-session"],
				"summary": "Get Photos By Angle",
				"operationId": "get_photos_by_angle_api_photo_session_angle_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "angle_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Angle Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_PictureWithSessionRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/newsbreak/find-newsbreaks": {
			"get": {
				"tags": ["newsbreak"],
				"summary": "Get Newsbreaks For User",
				"description": "Получить существующие инфоповоды из профиля,\nесли дата рождения не указана, выводятся все инфоповоды",
				"operationId": "get_newsbreaks_for_user_api_newsbreak_find_newsbreaks_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_NewsbreakUserRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/newsbreak/plan-visit": {
			"post": {
				"tags": ["newsbreak"],
				"summary": "Plan Visit From Newsbreak",
				"description": "Создание пациентом визита из инфоповода",
				"operationId": "plan_visit_from_newsbreak_api_newsbreak_plan_visit_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "newsbreak_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Newsbreak Id" }
					},
					{
						"name": "record_date",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Record Date" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/VisitUserRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-newsbreak": {
			"post": {
				"tags": ["clinic-newsbreak"],
				"summary": "Create Newsbreak",
				"description": "Создание инфоповода, доступен админу клиники",
				"operationId": "create_newsbreak_api_clinic_newsbreak_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_create_newsbreak_api_clinic_newsbreak_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NewsbreakClinicRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["clinic-newsbreak"],
				"summary": "Update Newsbreak",
				"description": "Изменение инфоповода, доступен админу клиники",
				"operationId": "update_newsbreak_api_clinic_newsbreak_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "newsbreak_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Newsbreak Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/NewsbreakUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NewsbreakClinicRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["clinic-newsbreak"],
				"summary": "Delete Newsbreak",
				"description": "Удаление инфоповода, доступен если неактивен",
				"operationId": "delete_newsbreak_api_clinic_newsbreak_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "newsbreak_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Newsbreak Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-newsbreak/public": {
			"post": {
				"tags": ["clinic-newsbreak"],
				"summary": "Public Newsbreak",
				"description": "Изменение инфоповода, доступен админу клиники",
				"operationId": "public_newsbreak_api_clinic_newsbreak_public_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "newsbreak_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Newsbreak Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/NewsbreakClinicRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-newsbreak/page-query": {
			"get": {
				"tags": ["clinic-newsbreak"],
				"summary": "Get Newsbreaks",
				"description": "Получить админу существующие инфоповоды его клиники без какой-либо фильтрации",
				"operationId": "get_newsbreaks_api_clinic_newsbreak_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_NewsbreakClinicRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-newsbreak/download": {
			"get": {
				"tags": ["clinic-newsbreak"],
				"summary": "Get Newsbreaks",
				"description": "Получить админу существующие инфоповоды его клиники без какой-либо фильтрации",
				"operationId": "get_newsbreaks_api_clinic_newsbreak_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/send-invite": {
			"post": {
				"tags": ["medic"],
				"summary": "Send Invite To Medic",
				"description": "Отправить приглашение врачу на почту",
				"operationId": "send_invite_to_medic_api_medic_send_invite_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "email",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "format": "email", "title": "Email" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/mark-expert": {
			"post": {
				"tags": ["medic"],
				"summary": "Mark Expert Medic",
				"description": "Сделать врача экспертом",
				"operationId": "mark_expert_medic_api_medic_mark_expert_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/MedicProfileRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/unmark-expert": {
			"post": {
				"tags": ["medic"],
				"summary": "Unmark Expert Medic",
				"description": "Сделать эксперта врачом",
				"operationId": "unmark_expert_medic_api_medic_unmark_expert_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/MedicProfileRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/find-medics": {
			"get": {
				"tags": ["medic"],
				"summary": "Get Medics For Clinic",
				"description": "Получить список врачей клиники",
				"operationId": "get_medics_for_clinic_api_medic_find_medics_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "sort_by",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/Sorting" }
					},
					{
						"name": "direction",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/SortingDirection" }
					},
					{
						"name": "specialization_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Specialization Id" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					},
					{
						"name": "clinic_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "role",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Role" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_MedicProfileRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/download": {
			"get": {
				"tags": ["medic"],
				"summary": "Get Medics For Clinic",
				"description": "Получить список врачей клиники",
				"operationId": "get_medics_for_clinic_api_medic_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "sort_by",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/Sorting" }
					},
					{
						"name": "direction",
						"in": "query",
						"required": false,
						"schema": { "$ref": "#/components/schemas/SortingDirection" }
					},
					{
						"name": "specialization_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Specialization Id" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					},
					{
						"name": "clinic_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "role",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Role" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/edit": {
			"put": {
				"tags": ["medic"],
				"summary": "Edit Medic",
				"description": "Изменить возможно все кроме почты и телефона",
				"operationId": "edit_medic_api_medic_edit_put",
				"requestBody": {
					"content": {
						"application/json": { "schema": { "$ref": "#/components/schemas/EditMedic" } }
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/MedicProfileRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/medic": {
			"delete": {
				"tags": ["medic"],
				"summary": "Delete Medic",
				"description": "Отвязать медика от клиники",
				"operationId": "delete_medic_api_medic_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "medic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Medic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/get-info": {
			"get": {
				"tags": ["medic"],
				"summary": "Get Medic For Clinic",
				"description": "Получить профиль медика",
				"operationId": "get_medic_for_clinic_api_medic_get_info_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "medic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Medic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/MedicDataRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/schedule": {
			"get": {
				"tags": ["medic"],
				"summary": "Get Medic Schedule",
				"description": "Расписание, в какие дни в какое время принимает во всех клиниках",
				"operationId": "get_medic_schedule_api_medic_schedule_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "medic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Medic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/ScheduleRead" },
									"title": "Response Get Medic Schedule Api Medic Schedule Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/medic/procedures": {
			"get": {
				"tags": ["medic"],
				"summary": "Get Medic Procedures",
				"description": "Визиты медика во всех клиниках по типу и по дате",
				"operationId": "get_medic_procedures_api_medic_procedures_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "medic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Medic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "types",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Types" }
					},
					{
						"name": "date_from",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date From" }
					},
					{
						"name": "date_to",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date To" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitAdminRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/page-query": {
			"get": {
				"tags": ["clinic-procedure"],
				"summary": "Get Procedures",
				"operationId": "get_procedures_api_clinic_procedure_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ProcedureRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/my/add": {
			"post": {
				"tags": ["clinic-procedure"],
				"summary": "Add My Procedure",
				"operationId": "add_my_procedure_api_clinic_procedure_my_add_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ClinicProcedureCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicProcedureRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/clinic-procedure/schedule": {
			"post": {
				"tags": ["clinic-procedure"],
				"summary": "Add Schedule To Visit",
				"description": "Добавить расписание к процедуре - клиника",
				"operationId": "add_schedule_to_visit_api_clinic_procedure_schedule_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ScheduleCreate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ScheduleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["clinic-procedure"],
				"summary": "Get Schedule",
				"operationId": "get_schedule_api_clinic_procedure_schedule_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "date_from",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date From" }
					},
					{
						"name": "date_to",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Date To" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": { "$ref": "#/components/schemas/ScheduleRead" },
									"title": "Response Get Schedule Api Clinic Procedure Schedule Get"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["clinic-procedure"],
				"summary": "Delete Schedule",
				"operationId": "delete_schedule_api_clinic_procedure_schedule_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "schedule_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Schedule Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/my/page-query": {
			"get": {
				"tags": ["clinic-procedure"],
				"summary": "Get Procedures",
				"operationId": "get_procedures_api_clinic_procedure_my_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ClinicProcedureRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/my/download": {
			"get": {
				"tags": ["clinic-procedure"],
				"summary": "Get Procedures",
				"operationId": "get_procedures_api_clinic_procedure_my_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/my/update": {
			"post": {
				"tags": ["clinic-procedure"],
				"summary": "Update My Procedure",
				"operationId": "update_my_procedure_api_clinic_procedure_my_update_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Procedure Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ClinicProcedureUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicProcedureRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/my": {
			"delete": {
				"tags": ["clinic-procedure"],
				"summary": "Delete My Procedure",
				"operationId": "delete_my_procedure_api_clinic_procedure_my_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ClinicProcedureRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/clinic-procedure/cycle": {
			"get": {
				"tags": ["clinic-procedure"],
				"summary": "Get Cycle",
				"description": "Получить цикл процедур по id",
				"operationId": "get_cycle_api_clinic_procedure_cycle_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "cycle_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Cycle Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProcedureCycleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-procedure": {
			"get": {
				"tags": ["user-procedure"],
				"summary": "Get Procedures",
				"operationId": "get_procedures_api_user_procedure_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProgrammProcedureUserRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-procedure/by-date": {
			"get": {
				"tags": ["user-procedure"],
				"summary": "Get Procedures By Date",
				"operationId": "get_procedures_by_date_api_user_procedure_by_date_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "date",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Date" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_RecommendationRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-procedure/all": {
			"get": {
				"tags": ["user-procedure"],
				"summary": "Get All Procedures",
				"operationId": "get_all_procedures_api_user_procedure_all_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ProcedureRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-procedure/cycle": {
			"get": {
				"tags": ["user-procedure"],
				"summary": "Get Cycle",
				"description": "Получить цикл процедур по id",
				"operationId": "get_cycle_api_user_procedure_cycle_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "cycle_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Cycle Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProcedureCycleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/user-procedure/cycles": {
			"get": {
				"tags": ["user-procedure"],
				"summary": "Get Cycles",
				"description": "Получить циклы процедур",
				"operationId": "get_cycles_api_user_procedure_cycles_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProcedureCycleRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure": {
			"post": {
				"tags": ["procedure"],
				"summary": "Create Procedure",
				"description": "Добавить процедуру",
				"operationId": "create_procedure_api_procedure_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProcedureCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/lib__procedure__model__schemas__ProcedureRead"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/procedure/update": {
			"post": {
				"tags": ["procedure"],
				"summary": "Update Procedure",
				"description": "Обновить процедуру",
				"operationId": "update_procedure_api_procedure_update_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProcedureUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/lib__procedure__model__schemas__ProcedureRead"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/page-query": {
			"get": {
				"tags": ["procedure"],
				"summary": "Get All Procedures",
				"description": "Получить все процедуры",
				"operationId": "get_all_procedures_api_procedure_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ProcedureRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/delete": {
			"delete": {
				"tags": ["procedure"],
				"summary": "Delete Procedure",
				"operationId": "delete_procedure_api_procedure_delete_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/in-programm/add": {
			"post": {
				"tags": ["procedure"],
				"summary": "Create Procedure",
				"description": "Добавить сущность",
				"operationId": "create_procedure_api_procedure_in_programm_add_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProgrammProcedureCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProgrammProcedureSuperadminRead"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/procedure/in-programm/page-query": {
			"get": {
				"tags": ["procedure"],
				"summary": "Get All Procedures",
				"operationId": "get_all_procedures_api_procedure_in_programm_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProgrammProcedureSuperadminRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/in-programm/download": {
			"get": {
				"tags": ["procedure"],
				"summary": "Get All Procedures",
				"operationId": "get_all_procedures_api_procedure_in_programm_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/in-programm/update": {
			"post": {
				"tags": ["procedure"],
				"summary": "Update Procedure",
				"operationId": "update_procedure_api_procedure_in_programm_update_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProgrammProcedureUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ProgrammProcedureSuperadminRead"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/in-programm/delete": {
			"delete": {
				"tags": ["procedure"],
				"summary": "Delete Procedure",
				"operationId": "delete_procedure_api_procedure_in_programm_delete_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "procedure_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/procedure/cycles/page-query": {
			"get": {
				"tags": ["procedure"],
				"summary": "Get Cycle",
				"description": "Получить циклы процедур",
				"operationId": "get_cycle_api_procedure_cycles_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProcedureCycleRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm": {
			"post": {
				"tags": ["programm"],
				"summary": "Create Programm",
				"description": "Добавить программу",
				"operationId": "create_programm_api_programm_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProgrammCreate" }
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProgrammWithoutProceduresRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/programm/page-query": {
			"get": {
				"tags": ["programm"],
				"summary": "Get All Programs",
				"description": "Получить все программы",
				"operationId": "get_all_programs_api_programm_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProgrammWithoutProceduresRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm/download": {
			"get": {
				"tags": ["programm"],
				"summary": "Download All Programs",
				"description": "Получить все программы",
				"operationId": "download_all_programs_api_programm_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm/update": {
			"post": {
				"tags": ["programm"],
				"summary": "Update Programm",
				"description": "Обновить программу",
				"operationId": "update_programm_api_programm_update_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ProgrammUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProgrammWithoutProceduresRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm/set-to-patient": {
			"post": {
				"tags": ["programm"],
				"summary": "Set Programm To Patient",
				"operationId": "set_programm_to_patient_api_programm_set_to_patient_post",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "patient_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Patient Id" }
					},
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ProfileRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm/referral-link": {
			"get": {
				"tags": ["programm"],
				"summary": "Get Referral Link",
				"operationId": "get_referral_link_api_programm_referral_link_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/programm/delete": {
			"delete": {
				"tags": ["programm"],
				"summary": "Delete Programm",
				"description": "Удалить программу",
				"operationId": "delete_programm_api_programm_delete_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "programm_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/patient-info": {
			"get": {
				"tags": ["clinic-overview"],
				"summary": "Get Patient Info",
				"description": "Получить профиль и фото профиля пациента",
				"operationId": "get_patient_info_api_overview_patient_info_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PatientDataRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/patient-visits": {
			"get": {
				"tags": ["clinic-overview"],
				"summary": "Get Patient Visits",
				"description": "Получить визиты пациента",
				"operationId": "get_patient_visits_api_overview_patient_visits_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "types",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Types" }
					},
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "clinic_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Clinic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitUserRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/clinics": {
			"get": {
				"tags": ["user-overview"],
				"summary": "Get Clinics",
				"description": "Получить все клиники",
				"operationId": "get_clinics_api_overview_clinics_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					},
					{
						"name": "city_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "City Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ClinicProfileInUserListRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/clinic-info": {
			"get": {
				"tags": ["user-overview"],
				"summary": "Get Clinic Info",
				"description": "Получить профиль и фото профиля пациента",
				"operationId": "get_clinic_info_api_overview_clinic_info_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/clinic-medics": {
			"get": {
				"tags": ["user-overview"],
				"summary": "Get Clinic Medics",
				"description": "Получить врачей клиники",
				"operationId": "get_clinic_medics_api_overview_clinic_medics_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_MedicProfileForUserRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/overview/clinic-procedures": {
			"get": {
				"tags": ["user-overview"],
				"summary": "Get Clinic Procedures",
				"description": "Получить процедуры клиники",
				"operationId": "get_clinic_procedures_api_overview_clinic_procedures_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ClinicProcedureRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/article": {
			"post": {
				"tags": ["article"],
				"summary": "Create Article",
				"operationId": "create_article_api_article_post",
				"security": [{ "APIKeyCookie": [] }],
				"requestBody": {
					"required": true,
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_create_article_api_article_post"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ArticleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["article"],
				"summary": "Update Article",
				"operationId": "update_article_api_article_put",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "article_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Article Id" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/ArticleUpdate" }
						}
					}
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ArticleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"get": {
				"tags": ["article"],
				"summary": "Get Article",
				"operationId": "get_article_api_article_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "article_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Article Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ArticleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["article"],
				"summary": "Delete Article",
				"operationId": "delete_article_api_article_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "article_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Article Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/article/upload-file": {
			"post": {
				"tags": ["article"],
				"summary": "Upload File",
				"operationId": "upload_file_api_article_upload_file_post",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"$ref": "#/components/schemas/Body_upload_file_api_article_upload_file_post"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ArticleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				},
				"security": [{ "APIKeyCookie": [] }]
			}
		},
		"/api/article/delete-file": {
			"delete": {
				"tags": ["article"],
				"summary": "Delete File",
				"description": "Удалить фото по id фото",
				"operationId": "delete_file_api_article_delete_file_delete",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "file_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "File Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ArticleRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/article/page-query": {
			"get": {
				"tags": ["article"],
				"summary": "Get Articles Pageable",
				"operationId": "get_articles_pageable_api_article_page_query_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					},
					{
						"name": "procedure_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Procedure Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ArticleRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinics": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinics",
				"description": "Получить все клиники",
				"operationId": "get_clinics_api_superadmin_overview_clinics_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					},
					{
						"name": "city_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "City Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ClinicProfileInSuperadminListRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinic-info": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinic Info",
				"description": "Получить профиль клиники",
				"operationId": "get_clinic_info_api_superadmin_overview_clinic_info_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinic-visits": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinic Visits",
				"description": "Получить визиты клиники",
				"operationId": "get_clinic_visits_api_superadmin_overview_clinic_visits_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "type",
						"in": "query",
						"required": true,
						"schema": { "$ref": "#/components/schemas/VisitType" }
					},
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitAdminRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinic-medics": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinic Medics",
				"description": "Получить врачей клиники",
				"operationId": "get_clinic_medics_api_superadmin_overview_clinic_medics_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_MedicProfileRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinic-procedures": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinic Procedures",
				"description": "Получить процедуры клиники",
				"operationId": "get_clinic_procedures_api_superadmin_overview_clinic_procedures_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ClinicProcedureRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/clinic-patients": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Clinic Patients",
				"description": "Получить визиты пациента",
				"operationId": "get_clinic_patients_api_superadmin_overview_clinic_patients_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "clinic_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "Clinic Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ProfileRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/patients": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Patients",
				"description": "Получить всех пациентов",
				"operationId": "get_patients_api_superadmin_overview_patients_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					},
					{
						"name": "city_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "City Id" }
					},
					{
						"name": "programm_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_ProfileRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/patients/download": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Download Patients",
				"description": "Скачать всех пациентов",
				"operationId": "download_patients_api_superadmin_overview_patients_download_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					},
					{
						"name": "name",
						"in": "query",
						"required": false,
						"schema": { "type": "string", "default": "", "title": "Name" }
					},
					{
						"name": "city_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "City Id" }
					},
					{
						"name": "programm_id",
						"in": "query",
						"required": false,
						"schema": { "type": "integer", "title": "Programm Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": { "application/json": { "schema": {} } }
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/patients-info": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Patient Info",
				"description": "Получить профиль и фото профиля пациента",
				"operationId": "get_patient_info_api_superadmin_overview_patients_info_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PatientDataRead" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/patients-visits": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Patient Visits",
				"description": "Получить визиты пациента",
				"operationId": "get_patient_visits_api_superadmin_overview_patients_visits_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "types",
						"in": "query",
						"required": true,
						"schema": { "type": "string", "title": "Types" }
					},
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SomePageable_VisitAdminRead_" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/api/superadmin/overview/patients-recommendations": {
			"get": {
				"tags": ["superadmin-overview"],
				"summary": "Get Patient Visits",
				"description": "Получить визиты пациента",
				"operationId": "get_patient_visits_api_superadmin_overview_patients_recommendations_get",
				"security": [{ "APIKeyCookie": [] }],
				"parameters": [
					{
						"name": "user_id",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "title": "User Id" }
					},
					{
						"name": "page",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 0, "title": "Page" }
					},
					{
						"name": "limit",
						"in": "query",
						"required": true,
						"schema": { "type": "integer", "minimum": 5, "title": "Limit" }
					}
				],
				"responses": {
					"200": {
						"description": "Successful Response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/SomePageable_ProgrammProcedureUserRead_"
								}
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"ActualVisitUserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"user_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "User Id"
					},
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"record_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Record Date"
					},
					"record_time": {
						"anyOf": [{ "type": "string", "format": "time" }, { "type": "null" }],
						"title": "Record Time"
					},
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"type": { "type": "string", "title": "Type" },
					"deletable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Deletable"
					},
					"procedure": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/lib__visit__model__schemas__ProcedureRead"
							},
							{ "type": "null" }
						]
					},
					"medic": {
						"anyOf": [{ "$ref": "#/components/schemas/MedicRead" }, { "type": "null" }]
					},
					"device": {
						"anyOf": [{ "$ref": "#/components/schemas/DeviceRead" }, { "type": "null" }]
					},
					"preparation": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationRead" },
							{ "type": "null" }
						]
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"record_date",
					"record_time",
					"type",
					"procedure",
					"city"
				],
				"title": "ActualVisitUserRead"
			},
			"AgeCreate": {
				"properties": {
					"age_from": { "type": "integer", "title": "Age From" },
					"age_to": { "type": "integer", "title": "Age To" }
				},
				"type": "object",
				"required": ["age_from", "age_to"],
				"title": "AgeCreate"
			},
			"AgeRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"age_from": { "type": "integer", "title": "Age From" },
					"age_to": { "type": "integer", "title": "Age To" }
				},
				"type": "object",
				"required": ["id", "age_from", "age_to"],
				"title": "AgeRead"
			},
			"AgeUpdate": {
				"properties": {
					"age_from": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Age From"
					},
					"age_to": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Age To"
					}
				},
				"type": "object",
				"title": "AgeUpdate"
			},
			"AngleRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "AngleRead"
			},
			"ArticleRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"sex": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Sex" },
					"markdown": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Markdown"
					},
					"uploader_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Uploader Id"
					},
					"procedure": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ProcedureForClinicRead" },
							{ "type": "null" }
						]
					},
					"age": {
						"anyOf": [{ "$ref": "#/components/schemas/AgeRead" }, { "type": "null" }]
					},
					"upload_date": {
						"type": "string",
						"format": "date-time",
						"title": "Upload Date"
					},
					"file": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PictureForObjRead" },
							{ "type": "null" }
						]
					}
				},
				"type": "object",
				"required": ["id"],
				"title": "ArticleRead"
			},
			"ArticleUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"sex": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Sex" },
					"markdown": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Markdown"
					},
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					},
					"age_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Age Id"
					}
				},
				"type": "object",
				"title": "ArticleUpdate"
			},
			"Body_add_device_api_dictionary_devices_post": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"brand_id": { "type": "integer", "title": "Brand Id" },
					"country_id": { "type": "integer", "title": "Country Id" },
					"photos": {
						"items": { "type": "string", "format": "binary" },
						"type": "array",
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["name", "brand_id", "country_id"],
				"title": "Body_add_device_api_dictionary_devices_post"
			},
			"Body_add_preparation_api_dictionary_preparations_post": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"group_id": { "type": "integer", "title": "Group Id" },
					"country_id": { "type": "integer", "title": "Country Id" },
					"photos": {
						"items": { "type": "string", "format": "binary" },
						"type": "array",
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["name", "group_id", "country_id"],
				"title": "Body_add_preparation_api_dictionary_preparations_post"
			},
			"Body_approve_visit_api_clinic_visit_approve_fact_post": {
				"properties": {
					"device_picture": {
						"anyOf": [{ "type": "string", "format": "binary" }, { "type": "string" }],
						"title": "Device Picture"
					},
					"preparation_picture": {
						"anyOf": [{ "type": "string", "format": "binary" }, { "type": "string" }],
						"title": "Preparation Picture"
					}
				},
				"type": "object",
				"title": "Body_approve_visit_api_clinic_visit_approve_fact_post"
			},
			"Body_auth_jwt_login_api_auth_jwt_login_post": {
				"properties": {
					"grant_type": {
						"anyOf": [{ "type": "string", "pattern": "password" }, { "type": "null" }],
						"title": "Grant Type"
					},
					"username": { "type": "string", "title": "Username" },
					"password": { "type": "string", "title": "Password" },
					"scope": { "type": "string", "title": "Scope", "default": "" },
					"client_id": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Client Id"
					},
					"client_secret": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Client Secret"
					}
				},
				"type": "object",
				"required": ["username", "password"],
				"title": "Body_auth_jwt_login_api_auth_jwt_login_post"
			},
			"Body_create_article_api_article_post": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"sex": { "type": "string", "title": "Sex" },
					"procedure_id": { "type": "integer", "title": "Procedure Id" },
					"age_id": { "type": "integer", "title": "Age Id" },
					"markdown": { "type": "string", "title": "Markdown" },
					"file": { "type": "string", "format": "binary", "title": "File" }
				},
				"type": "object",
				"required": ["name", "sex", "procedure_id"],
				"title": "Body_create_article_api_article_post"
			},
			"Body_create_newsbreak_api_clinic_newsbreak_post": {
				"properties": {
					"clinic_procedure_id": { "type": "integer", "title": "Clinic Procedure Id" },
					"price": { "type": "number", "title": "Price" },
					"article": { "type": "string", "title": "Article" },
					"date_from": { "type": "string", "title": "Date From" },
					"date_to": { "type": "string", "title": "Date To" },
					"sex": { "type": "string", "title": "Sex" },
					"age_id": { "type": "integer", "title": "Age Id" },
					"photos": {
						"items": { "type": "string", "format": "binary" },
						"type": "array",
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["clinic_procedure_id", "price", "article", "date_from", "date_to"],
				"title": "Body_create_newsbreak_api_clinic_newsbreak_post"
			},
			"Body_reset_forgot_password_api_auth_forgot_password_post": {
				"properties": {
					"email": { "type": "string", "format": "email", "title": "Email" }
				},
				"type": "object",
				"required": ["email"],
				"title": "Body_reset_forgot_password_api_auth_forgot_password_post"
			},
			"Body_upload_dictionary_units_api_dictionary_upload_post": {
				"properties": {
					"file": { "type": "string", "format": "binary", "title": "File" }
				},
				"type": "object",
				"required": ["file"],
				"title": "Body_upload_dictionary_units_api_dictionary_upload_post"
			},
			"Body_upload_file_api_article_upload_file_post": {
				"properties": {
					"file": { "type": "string", "format": "binary", "title": "File" },
					"article_id": { "type": "integer", "title": "Article Id" }
				},
				"type": "object",
				"required": ["file", "article_id"],
				"title": "Body_upload_file_api_article_upload_file_post"
			},
			"Body_upload_photo_api_photo_session_upload_photo_post": {
				"properties": {
					"file": { "type": "string", "format": "binary", "title": "File" },
					"session_id": { "type": "integer", "title": "Session Id" }
				},
				"type": "object",
				"required": ["file", "session_id"],
				"title": "Body_upload_photo_api_photo_session_upload_photo_post"
			},
			"Body_upload_to_dictionary_api_picture_dictionary_post": {
				"properties": {
					"picture": { "type": "string", "format": "binary", "title": "Picture" }
				},
				"type": "object",
				"required": ["picture"],
				"title": "Body_upload_to_dictionary_api_picture_dictionary_post"
			},
			"Body_upload_to_newsbreak_api_picture_newsbreak_post": {
				"properties": {
					"picture": { "type": "string", "format": "binary", "title": "Picture" }
				},
				"type": "object",
				"required": ["picture"],
				"title": "Body_upload_to_newsbreak_api_picture_newsbreak_post"
			},
			"Body_upload_to_profile_api_picture_profile_post": {
				"properties": {
					"file": { "type": "string", "format": "binary", "title": "File" }
				},
				"type": "object",
				"required": ["file"],
				"title": "Body_upload_to_profile_api_picture_profile_post"
			},
			"Body_upload_to_visit_api_picture_visit_post": {
				"properties": {
					"image": { "type": "string", "format": "binary", "title": "Image" }
				},
				"type": "object",
				"required": ["image"],
				"title": "Body_upload_to_visit_api_picture_visit_post"
			},
			"BrandRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "BrandRead"
			},
			"ChangePassword": {
				"properties": {
					"old_password": { "type": "string", "title": "Old Password" },
					"new_password": { "type": "string", "title": "New Password" }
				},
				"type": "object",
				"required": ["old_password", "new_password"],
				"title": "ChangePassword"
			},
			"CityRead": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"id": { "type": "integer", "title": "Id" }
				},
				"type": "object",
				"required": ["name", "id"],
				"title": "CityRead"
			},
			"ClinicInVisitRead": {
				"properties": {
					"organisation_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Organisation Name"
					}
				},
				"type": "object",
				"required": ["organisation_name"],
				"title": "ClinicInVisitRead"
			},
			"ClinicInformationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"clinic_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Id"
					},
					"clinic_profile_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Profile Id"
					},
					"markdown": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Markdown"
					},
					"upload_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Upload Date"
					}
				},
				"type": "object",
				"required": ["id"],
				"title": "ClinicInformationRead"
			},
			"ClinicProcedureCreate": {
				"properties": {
					"procedure_id": { "type": "integer", "title": "Procedure Id" },
					"price": { "type": "integer", "title": "Price" },
					"duration": { "type": "integer", "title": "Duration" },
					"device_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Id"
					},
					"device_unit_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Unit Id"
					},
					"device_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Device Unit Volume"
					},
					"preparation_unit_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Unit Id"
					},
					"preparation_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Preparation Unit Volume"
					},
					"preparation_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Id"
					},
					"schedule": {
						"items": { "$ref": "#/components/schemas/ScheduleCreate" },
						"type": "array",
						"title": "Schedule"
					}
				},
				"type": "object",
				"required": ["procedure_id", "price", "duration"],
				"title": "ClinicProcedureCreate"
			},
			"ClinicProcedureRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"clinic_id": { "type": "integer", "title": "Clinic Id" },
					"price": { "type": "integer", "title": "Price" },
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"device_unit": {
						"anyOf": [{ "$ref": "#/components/schemas/UnitRead" }, { "type": "null" }]
					},
					"device_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Device Unit Volume"
					},
					"preparation_unit": {
						"anyOf": [{ "$ref": "#/components/schemas/UnitRead" }, { "type": "null" }]
					},
					"preparation_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Preparation Unit Volume"
					},
					"device": {
						"anyOf": [{ "$ref": "#/components/schemas/DeviceRead" }, { "type": "null" }]
					},
					"preparation": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationRead" },
							{ "type": "null" }
						]
					},
					"procedure": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ProcedureForClinicRead" },
							{ "type": "null" }
						]
					}
				},
				"type": "object",
				"required": ["id", "clinic_id", "price", "duration"],
				"title": "ClinicProcedureRead"
			},
			"ClinicProcedureUpdate": {
				"properties": {
					"price": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Price"
					},
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"device_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Id"
					},
					"device_unit_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Unit Id"
					},
					"device_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Device Unit Volume"
					},
					"preparation_unit_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Unit Id"
					},
					"preparation_unit_volume": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Preparation Unit Volume"
					},
					"preparation_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Id"
					}
				},
				"type": "object",
				"title": "ClinicProcedureUpdate"
			},
			"ClinicProfileInSuperadminListRead": {
				"properties": {
					"clinic_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Id"
					},
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					},
					"id": { "anyOf": [{ "type": "integer" }, { "type": "null" }], "title": "Id" },
					"email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Email"
					}
				},
				"type": "object",
				"title": "ClinicProfileInSuperadminListRead"
			},
			"ClinicProfileInUserListRead": {
				"properties": {
					"clinic_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Id"
					},
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					}
				},
				"type": "object",
				"title": "ClinicProfileInUserListRead"
			},
			"ClinicProfileRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Email"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"license": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "License"
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"clinic": {
						"anyOf": [{ "$ref": "#/components/schemas/ClinicRead" }, { "type": "null" }]
					},
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"kpp": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Kpp" },
					"ogrn": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Ogrn"
					},
					"bic": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Bic" },
					"bank_account": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Bank Account"
					},
					"corr_account": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Corr Account"
					},
					"general_manager": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "General Manager"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"company_email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Company Email"
					},
					"role": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Role",
						"default": "clinic"
					}
				},
				"type": "object",
				"required": ["id"],
				"title": "ClinicProfileRead"
			},
			"ClinicProfileUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"email": {
						"anyOf": [{ "type": "string", "format": "email" }, { "type": "null" }],
						"title": "Email"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"license": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "License"
					},
					"city_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "City Id"
					},
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"kpp": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Kpp" },
					"ogrn": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Ogrn"
					},
					"bic": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Bic" },
					"bank_account": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Bank Account"
					},
					"corr_account": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Corr Account"
					},
					"general_manager": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "General Manager"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"company_email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Company Email"
					}
				},
				"type": "object",
				"title": "ClinicProfileUpdate"
			},
			"ClinicRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"email": { "type": "string", "format": "email", "title": "Email" },
					"is_active": { "type": "boolean", "title": "Is Active" },
					"is_superuser": { "type": "boolean", "title": "Is Superuser" },
					"is_verified": { "type": "boolean", "title": "Is Verified" },
					"phone": { "type": "string", "title": "Phone" },
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"organisation_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Organisation Name"
					}
				},
				"type": "object",
				"required": [
					"id",
					"email",
					"is_active",
					"is_superuser",
					"is_verified",
					"phone",
					"inn",
					"organisation_name"
				],
				"title": "ClinicRead"
			},
			"ConfirmationsRead": {
				"properties": {
					"schedule_clinic": { "type": "boolean", "title": "Schedule Clinic" },
					"fact_visit_user": { "type": "boolean", "title": "Fact Visit User" },
					"fact_visit_clinic": { "type": "boolean", "title": "Fact Visit Clinic" }
				},
				"type": "object",
				"required": ["schedule_clinic", "fact_visit_user", "fact_visit_clinic"],
				"title": "ConfirmationsRead"
			},
			"CountryRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "CountryRead"
			},
			"DeviceRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"brand": {
						"anyOf": [{ "$ref": "#/components/schemas/BrandRead" }, { "type": "null" }]
					},
					"country": {
						"anyOf": [{ "$ref": "#/components/schemas/CountryRead" }, { "type": "null" }]
					},
					"photos": {
						"items": { "$ref": "#/components/schemas/PictureForObjRead" },
						"type": "array",
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["id", "name", "photos"],
				"title": "DeviceRead"
			},
			"DeviceUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"brand_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Brand Id"
					},
					"country_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Country Id"
					}
				},
				"type": "object",
				"title": "DeviceUpdate"
			},
			"DictionaryDownloadEntry": {
				"type": "string",
				"enum": ["Device", "Preparation", "Age", "Interval"],
				"title": "DictionaryDownloadEntry"
			},
			"DictionaryEntry": {
				"type": "string",
				"enum": [
					"Specialization",
					"Brand",
					"Country",
					"PreparationGroup",
					"City",
					"PreparationUnit",
					"DeviceUnit",
					"Angle"
				],
				"title": "DictionaryEntry"
			},
			"DictionaryRead": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"id": { "type": "integer", "title": "Id" }
				},
				"type": "object",
				"required": ["name", "id"],
				"title": "DictionaryRead"
			},
			"EditMedic": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"city_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "City Id"
					},
					"specialization_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Specialization Id"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"instagram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Instagram"
					},
					"telegram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Telegram"
					},
					"vk": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Vk" }
				},
				"type": "object",
				"required": ["id"],
				"title": "EditMedic"
			},
			"ErrorModel": {
				"properties": {
					"detail": {
						"anyOf": [
							{ "type": "string" },
							{ "additionalProperties": { "type": "string" }, "type": "object" }
						],
						"title": "Detail"
					}
				},
				"type": "object",
				"required": ["detail"],
				"title": "ErrorModel"
			},
			"HTTPValidationError": {
				"properties": {
					"detail": {
						"items": { "$ref": "#/components/schemas/ValidationError" },
						"type": "array",
						"title": "Detail"
					}
				},
				"type": "object",
				"title": "HTTPValidationError"
			},
			"IntervalRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"frequency": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Frequency"
					},
					"days": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Days"
					},
					"weeks": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Weeks"
					},
					"months": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Months"
					},
					"years": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Years"
					}
				},
				"type": "object",
				"required": ["id", "count", "frequency", "days", "weeks", "months", "years"],
				"title": "IntervalRead"
			},
			"LegalData": {
				"properties": {
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"ogrn": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Ogrn"
					},
					"okpo": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Okpo"
					},
					"name": {
						"anyOf": [{ "type": "object" }, { "type": "null" }],
						"title": "Name"
					},
					"kpp": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Kpp" }
				},
				"type": "object",
				"title": "LegalData"
			},
			"MedicDataRead": {
				"properties": {
					"profile": {
						"anyOf": [
							{ "$ref": "#/components/schemas/MedicProfileRead" },
							{ "type": "null" }
						]
					},
					"photo_url": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Photo Url"
					}
				},
				"type": "object",
				"required": ["profile"],
				"title": "MedicDataRead"
			},
			"MedicProfileForUserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"email": { "type": "string", "title": "Email" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"education": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Education"
					},
					"residency": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Residency"
					},
					"diploma_re_qualification": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Diploma Re Qualification"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"instagram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Instagram"
					},
					"telegram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Telegram"
					},
					"vk": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Vk" },
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"specializations": {
						"items": { "$ref": "#/components/schemas/MedicSpecializationRead" },
						"type": "array",
						"title": "Specializations"
					},
					"role": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Role" }
				},
				"type": "object",
				"required": ["id", "email"],
				"title": "MedicProfileForUserRead"
			},
			"MedicProfileRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"email": { "type": "string", "title": "Email" },
					"phone": { "type": "string", "title": "Phone" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"education": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Education"
					},
					"residency": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Residency"
					},
					"diploma_re_qualification": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Diploma Re Qualification"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"instagram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Instagram"
					},
					"telegram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Telegram"
					},
					"vk": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Vk" },
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"specializations": {
						"items": { "$ref": "#/components/schemas/MedicSpecializationRead" },
						"type": "array",
						"title": "Specializations"
					},
					"role": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Role" }
				},
				"type": "object",
				"required": ["id", "email", "phone"],
				"title": "MedicProfileRead"
			},
			"MedicProfileUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"city_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "City Id"
					},
					"specializations_ids": {
						"anyOf": [
							{ "items": { "type": "integer" }, "type": "array" },
							{ "type": "null" }
						],
						"title": "Specializations Ids"
					},
					"education": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Education"
					},
					"residency": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Residency"
					},
					"diploma_re_qualification": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Diploma Re Qualification"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"email": {
						"anyOf": [{ "type": "string", "format": "email" }, { "type": "null" }],
						"title": "Email"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"instagram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Instagram"
					},
					"telegram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Telegram"
					},
					"vk": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Vk" },
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					}
				},
				"type": "object",
				"title": "MedicProfileUpdate"
			},
			"MedicRead": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"id": { "type": "integer", "title": "Id" },
					"email": { "type": "string", "title": "Email" },
					"phone": { "type": "string", "title": "Phone" },
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"education": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Education"
					},
					"residency": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Residency"
					},
					"diploma_re_qualification": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Diploma Re Qualification"
					},
					"address": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Address"
					},
					"site": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Site"
					},
					"instagram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Instagram"
					},
					"telegram": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Telegram"
					},
					"vk": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Vk" },
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"role": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Role" }
				},
				"type": "object",
				"required": ["id", "email", "phone"],
				"title": "MedicRead"
			},
			"MedicSpecializationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "MedicSpecializationRead"
			},
			"NewsbreakClinicRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"clinic_id": { "type": "integer", "title": "Clinic Id" },
					"date_from": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date From"
					},
					"date_to": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date To"
					},
					"sex": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Sex" },
					"age": {
						"anyOf": [{ "$ref": "#/components/schemas/AgeRead" }, { "type": "null" }]
					},
					"article": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Article"
					},
					"price": { "type": "number", "title": "Price" },
					"discount": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Discount"
					},
					"clinic_procedure": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ClinicProcedureRead" },
							{ "type": "null" }
						]
					},
					"photos": {
						"items": { "$ref": "#/components/schemas/PictureForObjRead" },
						"type": "array",
						"title": "Photos"
					},
					"enable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Enable"
					}
				},
				"type": "object",
				"required": [
					"id",
					"clinic_id",
					"date_from",
					"date_to",
					"article",
					"price",
					"discount"
				],
				"title": "NewsbreakClinicRead"
			},
			"NewsbreakUpdate": {
				"properties": {
					"clinic_procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Procedure Id"
					},
					"price": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Price"
					},
					"article": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Article"
					},
					"date_from": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Date From"
					},
					"date_to": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Date To"
					},
					"sex": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Sex" },
					"age_id": { "type": "integer", "title": "Age Id" },
					"enable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Enable"
					}
				},
				"type": "object",
				"title": "NewsbreakUpdate"
			},
			"NewsbreakUserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"clinic_id": { "type": "integer", "title": "Clinic Id" },
					"date_from": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date From"
					},
					"date_to": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date To"
					},
					"sex": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Sex" },
					"age": {
						"anyOf": [{ "$ref": "#/components/schemas/AgeRead" }, { "type": "null" }]
					},
					"article": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Article"
					},
					"price": { "type": "number", "title": "Price" },
					"discount": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Discount"
					},
					"clinic_procedure": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ClinicProcedureRead" },
							{ "type": "null" }
						]
					},
					"photos": {
						"items": { "$ref": "#/components/schemas/PictureForObjRead" },
						"type": "array",
						"title": "Photos"
					},
					"enable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Enable"
					}
				},
				"type": "object",
				"required": [
					"id",
					"clinic_id",
					"date_from",
					"date_to",
					"article",
					"price",
					"discount"
				],
				"title": "NewsbreakUserRead"
			},
			"Organization": {
				"properties": {
					"value": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Value"
					},
					"data": {
						"anyOf": [{ "$ref": "#/components/schemas/LegalData" }, { "type": "null" }]
					}
				},
				"type": "object",
				"title": "Organization"
			},
			"PatientDataRead": {
				"properties": {
					"profile": {
						"anyOf": [{ "$ref": "#/components/schemas/ProfileRead" }, { "type": "null" }]
					},
					"photo_url": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Photo Url"
					}
				},
				"type": "object",
				"required": ["profile"],
				"title": "PatientDataRead"
			},
			"PeriodRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"count": { "type": "integer", "title": "Count" },
					"frequency": { "type": "string", "title": "Frequency" }
				},
				"type": "object",
				"required": ["id", "count", "frequency"],
				"title": "PeriodRead"
			},
			"PeriodUpdate": {
				"properties": {
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"frequency": {
						"anyOf": [{ "$ref": "#/components/schemas/PeriodValue" }, { "type": "null" }]
					}
				},
				"type": "object",
				"title": "PeriodUpdate"
			},
			"PeriodValue": {
				"type": "string",
				"enum": ["DAY", "WEEK", "MONTH", "YEAR"],
				"title": "PeriodValue"
			},
			"PhotoSessionCreate": {
				"properties": { "session_date": { "type": "string", "title": "Session Date" } },
				"type": "object",
				"required": ["session_date"],
				"title": "PhotoSessionCreate"
			},
			"PhotoSessionRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"user_id": { "type": "integer", "title": "User Id" },
					"session_date": {
						"type": "string",
						"format": "date-time",
						"title": "Session Date"
					},
					"photos": {
						"anyOf": [
							{
								"items": { "$ref": "#/components/schemas/PictureForSessionRead" },
								"type": "array"
							},
							{ "type": "null" }
						],
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["id", "user_id", "session_date", "photos"],
				"title": "PhotoSessionRead"
			},
			"PictureForObjRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"picture_url": { "type": "string", "title": "Picture Url" },
					"file_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "File Name"
					},
					"upload_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Upload Date"
					}
				},
				"type": "object",
				"required": ["id", "picture_url", "upload_date"],
				"title": "PictureForObjRead"
			},
			"PictureForSessionRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"picture_url": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Picture Url"
					},
					"angle_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Angle Id"
					},
					"session_id": { "type": "integer", "title": "Session Id" },
					"file_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "File Name"
					},
					"upload_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Upload Date"
					},
					"angle": {
						"anyOf": [{ "$ref": "#/components/schemas/AngleRead" }, { "type": "null" }]
					}
				},
				"type": "object",
				"required": ["id", "session_id", "file_name", "upload_date", "angle"],
				"title": "PictureForSessionRead"
			},
			"PictureForVisitRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"picture_url": { "type": "string", "title": "Picture Url" },
					"file_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "File Name"
					},
					"upload_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Upload Date"
					}
				},
				"type": "object",
				"required": ["id", "picture_url", "file_name", "upload_date"],
				"title": "PictureForVisitRead"
			},
			"PictureWithSessionRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"picture_url": { "type": "string", "title": "Picture Url" },
					"session_id": { "type": "integer", "title": "Session Id" },
					"session_date": {
						"type": "string",
						"format": "date-time",
						"title": "Session Date"
					},
					"file_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "File Name"
					},
					"upload_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Upload Date"
					}
				},
				"type": "object",
				"required": [
					"id",
					"picture_url",
					"session_id",
					"session_date",
					"file_name",
					"upload_date"
				],
				"title": "PictureWithSessionRead"
			},
			"PreparationGroupRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "PreparationGroupRead"
			},
			"PreparationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"group": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationGroupRead" },
							{ "type": "null" }
						]
					},
					"brand": {
						"anyOf": [{ "$ref": "#/components/schemas/BrandRead" }, { "type": "null" }]
					},
					"country": {
						"anyOf": [{ "$ref": "#/components/schemas/CountryRead" }, { "type": "null" }]
					},
					"photos": {
						"items": { "$ref": "#/components/schemas/PictureForObjRead" },
						"type": "array",
						"title": "Photos"
					}
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "PreparationRead"
			},
			"PreparationUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"group_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Group Id"
					},
					"country_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Country Id"
					},
					"brand_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Brand Id"
					}
				},
				"type": "object",
				"title": "PreparationUpdate"
			},
			"ProcedureCreate": {
				"properties": {
					"name": { "type": "string", "title": "Name" },
					"devices_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Devices Ids"
					},
					"preparations_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Preparations Ids"
					},
					"specializations_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Specializations Ids"
					}
				},
				"type": "object",
				"required": ["name", "devices_ids", "preparations_ids"],
				"title": "ProcedureCreate"
			},
			"ProcedureCycleRead": {
				"properties": {
					"id": { "anyOf": [{ "type": "integer" }, { "type": "null" }], "title": "Id" },
					"user_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "User Id"
					},
					"clinic_procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Procedure Id"
					},
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					},
					"programm_procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Procedure Id"
					},
					"last_date": {
						"anyOf": [{ "type": "string", "format": "date" }, { "type": "null" }],
						"title": "Last Date"
					},
					"status": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Status"
					},
					"visit_count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Visit Count"
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"clinic_procedure_id",
					"procedure_id",
					"programm_procedure_id",
					"last_date",
					"status",
					"visit_count"
				],
				"title": "ProcedureCycleRead"
			},
			"ProcedureDeviceRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"brand": {
						"anyOf": [{ "$ref": "#/components/schemas/BrandRead" }, { "type": "null" }]
					},
					"country": {
						"anyOf": [{ "$ref": "#/components/schemas/CountryRead" }, { "type": "null" }]
					},
					"photos": { "items": {}, "type": "array", "title": "Photos" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProcedureDeviceRead"
			},
			"ProcedureForClinicRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProcedureForClinicRead"
			},
			"ProcedurePreparationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"group": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationGroupRead" },
							{ "type": "null" }
						]
					},
					"brand": {
						"anyOf": [{ "$ref": "#/components/schemas/BrandRead" }, { "type": "null" }]
					},
					"photos": { "items": {}, "type": "array", "title": "Photos" }
				},
				"type": "object",
				"required": ["id", "name", "photos"],
				"title": "ProcedurePreparationRead"
			},
			"ProcedureSpecializationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProcedureSpecializationRead"
			},
			"ProcedureUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"devices_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Devices Ids"
					},
					"preparations_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Preparations Ids"
					},
					"specializations_ids": {
						"anyOf": [{ "items": {}, "type": "array" }, { "type": "null" }],
						"title": "Specializations Ids"
					}
				},
				"type": "object",
				"title": "ProcedureUpdate"
			},
			"ProfileRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"user_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "User Id"
					},
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Patronymic"
					},
					"date_of_birth": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date Of Birth"
					},
					"sex": {
						"anyOf": [{ "$ref": "#/components/schemas/Sex" }, { "type": "null" }]
					},
					"username": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Username"
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Email"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					},
					"role": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Role"
					},
					"procedures_programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedures Programm Id"
					},
					"procedures_programm": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ProgrammWithoutProceduresRead" },
							{ "type": "null" }
						]
					}
				},
				"type": "object",
				"required": ["id", "user_id", "date_of_birth", "city", "email", "phone"],
				"title": "ProfileRead"
			},
			"ProfileUpdate": {
				"properties": {
					"name": {
						"anyOf": [
							{ "type": "string", "maxLength": 70, "minLength": 2 },
							{ "type": "null" }
						],
						"title": "Name"
					},
					"surname": {
						"anyOf": [
							{ "type": "string", "maxLength": 70, "minLength": 2 },
							{ "type": "null" }
						],
						"title": "Surname"
					},
					"patronymic": {
						"anyOf": [
							{ "type": "string", "maxLength": 70, "minLength": 2 },
							{ "type": "null" }
						],
						"title": "Patronymic"
					},
					"date_of_birth": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Date Of Birth"
					},
					"city_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "City Id"
					},
					"sex": {
						"anyOf": [{ "$ref": "#/components/schemas/Sex" }, { "type": "null" }]
					},
					"username": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Username"
					},
					"email": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Email"
					},
					"phone": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Phone"
					}
				},
				"type": "object",
				"title": "ProfileUpdate"
			},
			"ProgrammCreate": {
				"properties": { "name": { "type": "string", "title": "Name" } },
				"type": "object",
				"required": ["name"],
				"title": "ProgrammCreate"
			},
			"ProgrammProcedureCreate": {
				"properties": {
					"procedure_id": { "type": "integer", "title": "Procedure Id" },
					"age_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Age Id"
					},
					"interval_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Interval Id"
					},
					"times_in_period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Times In Period"
					},
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Period"
					},
					"article_women_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Article Women Id"
					},
					"article_men_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Article Men Id"
					},
					"start_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Start Date"
					},
					"end_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "End Date"
					},
					"programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Id"
					}
				},
				"type": "object",
				"required": ["procedure_id"],
				"title": "ProgrammProcedureCreate"
			},
			"ProgrammProcedureSuperadminRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"procedure_id": { "type": "integer", "title": "Procedure Id" },
					"times_in_period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Times In Period"
					},
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Period"
					},
					"article_women": {
						"anyOf": [{ "$ref": "#/components/schemas/ArticleRead" }, { "type": "null" }]
					},
					"article_men": {
						"anyOf": [{ "$ref": "#/components/schemas/ArticleRead" }, { "type": "null" }]
					},
					"start_date": {
						"anyOf": [{ "type": "string", "format": "date" }, { "type": "null" }],
						"title": "Start Date"
					},
					"end_date": {
						"anyOf": [{ "type": "string", "format": "date" }, { "type": "null" }],
						"title": "End Date"
					},
					"programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Id"
					},
					"procedure": {
						"$ref": "#/components/schemas/lib__procedure__model__schemas__ProcedureRead"
					},
					"age": {
						"anyOf": [{ "$ref": "#/components/schemas/AgeRead" }, { "type": "null" }]
					},
					"interval": {
						"anyOf": [{ "$ref": "#/components/schemas/PeriodRead" }, { "type": "null" }]
					}
				},
				"type": "object",
				"required": ["id", "procedure_id", "procedure", "age"],
				"title": "ProgrammProcedureSuperadminRead"
			},
			"ProgrammProcedureUpdate": {
				"properties": {
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					},
					"age_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Age Id"
					},
					"interval_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Interval Id"
					},
					"times_in_period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Times In Period"
					},
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Period"
					},
					"article_women_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Article Women Id"
					},
					"article_men_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Article Men Id"
					},
					"start_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Start Date"
					},
					"end_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "End Date"
					},
					"programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Id"
					}
				},
				"type": "object",
				"title": "ProgrammProcedureUpdate"
			},
			"ProgrammProcedureUserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"times_in_period": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Times In Period"
					},
					"count": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Count"
					},
					"article_women": {
						"anyOf": [{ "$ref": "#/components/schemas/ArticleRead" }, { "type": "null" }]
					},
					"article_men": {
						"anyOf": [{ "$ref": "#/components/schemas/ArticleRead" }, { "type": "null" }]
					},
					"programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Id"
					},
					"interval": {
						"anyOf": [{ "$ref": "#/components/schemas/IntervalRead" }, { "type": "null" }]
					},
					"procedure": { "$ref": "#/components/schemas/ProcedureForClinicRead" }
				},
				"type": "object",
				"required": ["id", "procedure"],
				"title": "ProgrammProcedureUserRead"
			},
			"ProgrammUpdate": {
				"properties": { "name": { "type": "string", "title": "Name" } },
				"type": "object",
				"required": ["name"],
				"title": "ProgrammUpdate"
			},
			"ProgrammWithoutProceduresRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"expert_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Expert Id"
					}
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProgrammWithoutProceduresRead"
			},
			"RecommendationRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"price": { "type": "number", "title": "Price" },
					"discount": {
						"anyOf": [{ "type": "number" }, { "type": "null" }],
						"title": "Discount"
					},
					"clinic_profile": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ClinicProfileInUserListRead" },
							{ "type": "null" }
						]
					},
					"date_from": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date From"
					},
					"date_to": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Date To"
					},
					"article": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Article"
					},
					"photos": {
						"items": { "$ref": "#/components/schemas/PictureForObjRead" },
						"type": "array",
						"title": "Photos"
					},
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"newsbreak_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Newsbreak Id"
					},
					"device": {
						"anyOf": [{ "$ref": "#/components/schemas/DeviceRead" }, { "type": "null" }]
					},
					"preparation": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationRead" },
							{ "type": "null" }
						]
					},
					"is_newsbreak": { "type": "boolean", "title": "Is Newsbreak", "default": false }
				},
				"type": "object",
				"required": ["id", "name", "price"],
				"title": "RecommendationRead"
			},
			"ResetPasswordRequest": {
				"properties": { "password": { "type": "string", "title": "Password" } },
				"type": "object",
				"required": ["password"],
				"title": "ResetPasswordRequest"
			},
			"Role": {
				"type": "string",
				"enum": ["user", "clinic", "medic", "superadmin", "expert"],
				"title": "Role"
			},
			"ScheduleCreate": {
				"properties": {
					"time_from": { "type": "string", "title": "Time From" },
					"time_to": { "type": "string", "title": "Time To" },
					"medic_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Medic Id"
					},
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					}
				},
				"type": "object",
				"required": ["time_from", "time_to", "medic_id"],
				"title": "ScheduleCreate"
			},
			"ScheduleRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"time_from": { "type": "string", "format": "date-time", "title": "Time From" },
					"time_to": { "type": "string", "format": "date-time", "title": "Time To" },
					"medic_id": { "type": "integer", "title": "Medic Id" },
					"procedure_id": { "type": "integer", "title": "Procedure Id" }
				},
				"type": "object",
				"required": ["id", "time_from", "time_to", "medic_id", "procedure_id"],
				"title": "ScheduleRead"
			},
			"Sex": { "type": "string", "enum": ["FEMALE", "MALE"], "title": "Sex" },
			"SomePageable_ArticleRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ArticleRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ArticleRead]"
			},
			"SomePageable_CityRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/CityRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[CityRead]"
			},
			"SomePageable_ClinicProcedureRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ClinicProcedureRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ClinicProcedureRead]"
			},
			"SomePageable_ClinicProfileInSuperadminListRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ClinicProfileInSuperadminListRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ClinicProfileInSuperadminListRead]"
			},
			"SomePageable_ClinicProfileInUserListRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ClinicProfileInUserListRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ClinicProfileInUserListRead]"
			},
			"SomePageable_DeviceRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/DeviceRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[DeviceRead]"
			},
			"SomePageable_MedicProfileForUserRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/MedicProfileForUserRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[MedicProfileForUserRead]"
			},
			"SomePageable_MedicProfileRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/MedicProfileRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[MedicProfileRead]"
			},
			"SomePageable_NewsbreakClinicRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/NewsbreakClinicRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[NewsbreakClinicRead]"
			},
			"SomePageable_NewsbreakUserRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/NewsbreakUserRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[NewsbreakUserRead]"
			},
			"SomePageable_PhotoSessionRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/PhotoSessionRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[PhotoSessionRead]"
			},
			"SomePageable_PictureWithSessionRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/PictureWithSessionRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[PictureWithSessionRead]"
			},
			"SomePageable_PreparationRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/PreparationRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[PreparationRead]"
			},
			"SomePageable_ProcedureCycleRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ProcedureCycleRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProcedureCycleRead]"
			},
			"SomePageable_ProcedureRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": {
							"$ref": "#/components/schemas/lib__procedure__model__schemas__ProcedureRead"
						},
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProcedureRead]"
			},
			"SomePageable_ProfileRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ProfileRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProfileRead]"
			},
			"SomePageable_ProgrammProcedureSuperadminRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ProgrammProcedureSuperadminRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProgrammProcedureSuperadminRead]"
			},
			"SomePageable_ProgrammProcedureUserRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ProgrammProcedureUserRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProgrammProcedureUserRead]"
			},
			"SomePageable_ProgrammWithoutProceduresRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/ProgrammWithoutProceduresRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[ProgrammWithoutProceduresRead]"
			},
			"SomePageable_RecommendationRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/RecommendationRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[RecommendationRead]"
			},
			"SomePageable_VisitAdminRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/VisitAdminRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[VisitAdminRead]"
			},
			"SomePageable_VisitUserRead_": {
				"properties": {
					"size": { "type": "integer", "title": "Size" },
					"page": { "type": "integer", "title": "Page" },
					"has_more": { "type": "boolean", "title": "Has More" },
					"content": {
						"items": { "$ref": "#/components/schemas/VisitUserRead" },
						"type": "array",
						"title": "Content"
					}
				},
				"type": "object",
				"required": ["size", "page"],
				"title": "SomePageable[VisitUserRead]"
			},
			"Sorting": {
				"type": "string",
				"enum": ["name", "specialization"],
				"title": "Sorting"
			},
			"SortingDirection": {
				"type": "string",
				"enum": ["asc", "desc"],
				"title": "SortingDirection"
			},
			"UnitRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "UnitRead"
			},
			"UserCreate": {
				"properties": {
					"email": { "type": "string", "format": "email", "title": "Email" },
					"password": { "type": "string", "title": "Password" },
					"is_active": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Is Active",
						"default": true
					},
					"is_superuser": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Is Superuser",
						"default": false
					},
					"is_verified": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Is Verified",
						"default": false
					},
					"phone": { "type": "string", "title": "Phone" },
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"organisation_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Organisation Name"
					},
					"role": { "$ref": "#/components/schemas/Role" },
					"registered_at": {
						"type": "string",
						"format": "date-time",
						"title": "Registered At"
					},
					"medic_code": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Medic Code"
					},
					"code": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Code"
					},
					"programm_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Programm Id"
					}
				},
				"type": "object",
				"required": ["email", "password", "phone", "role"],
				"title": "UserCreate"
			},
			"UserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"email": {
						"anyOf": [{ "type": "string", "format": "email" }, { "type": "null" }],
						"title": "Email"
					},
					"is_active": { "type": "boolean", "title": "Is Active", "default": true },
					"is_superuser": {
						"type": "boolean",
						"title": "Is Superuser",
						"default": false
					},
					"is_verified": { "type": "boolean", "title": "Is Verified", "default": false },
					"phone": { "type": "string", "title": "Phone" },
					"inn": { "anyOf": [{ "type": "string" }, { "type": "null" }], "title": "Inn" },
					"organisation_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Organisation Name"
					},
					"registered_at": {
						"type": "string",
						"format": "date-time",
						"title": "Registered At"
					}
				},
				"type": "object",
				"required": ["id", "email", "phone", "registered_at"],
				"title": "UserRead"
			},
			"ValidationError": {
				"properties": {
					"loc": {
						"items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
						"type": "array",
						"title": "Location"
					},
					"msg": { "type": "string", "title": "Message" },
					"type": { "type": "string", "title": "Error Type" }
				},
				"type": "object",
				"required": ["loc", "msg", "type"],
				"title": "ValidationError"
			},
			"VisitAdminRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"type": { "type": "string", "title": "Type" },
					"record_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Record Date"
					},
					"record_time": {
						"anyOf": [{ "type": "string", "format": "time" }, { "type": "null" }],
						"title": "Record Time"
					},
					"user_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "User Id"
					},
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					},
					"user_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "User Name"
					},
					"user_surname": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "User Surname"
					},
					"user_patronymic": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "User Patronymic"
					},
					"clinic_procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Clinic Procedure Id"
					},
					"deletable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Deletable"
					},
					"medic": {
						"anyOf": [
							{ "$ref": "#/components/schemas/MedicProfileRead" },
							{ "type": "null" }
						]
					},
					"device": {
						"anyOf": [{ "$ref": "#/components/schemas/DeviceRead" }, { "type": "null" }]
					},
					"preparation": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationRead" },
							{ "type": "null" }
						]
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"photos": {
						"anyOf": [
							{
								"items": { "$ref": "#/components/schemas/PictureForVisitRead" },
								"type": "array"
							},
							{ "type": "null" }
						],
						"title": "Photos"
					},
					"clinic": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ClinicInVisitRead" },
							{ "type": "null" }
						]
					},
					"confirmations": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ConfirmationsRead" },
							{ "type": "null" }
						]
					}
				},
				"type": "object",
				"required": [
					"id",
					"type",
					"record_date",
					"record_time",
					"user_id",
					"medic",
					"city",
					"photos",
					"clinic",
					"confirmations"
				],
				"title": "VisitAdminRead"
			},
			"VisitType": {
				"type": "string",
				"enum": [
					"CREATED",
					"SCHEDULED",
					"WAIT_FOR_FACT",
					"ACTUAL",
					"EXPIRED",
					"CANCELED"
				],
				"title": "VisitType"
			},
			"VisitUserCreate": {
				"properties": {
					"record_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Record Date"
					},
					"device_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Id"
					},
					"preparation_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Id"
					},
					"procedure_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Procedure Id"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"city_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "City Id"
					}
				},
				"type": "object",
				"title": "VisitUserCreate"
			},
			"VisitUserRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"user_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "User Id"
					},
					"duration": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Duration"
					},
					"record_date": {
						"anyOf": [{ "type": "string", "format": "date-time" }, { "type": "null" }],
						"title": "Record Date"
					},
					"record_time": {
						"anyOf": [{ "type": "string", "format": "time" }, { "type": "null" }],
						"title": "Record Time"
					},
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"type": { "type": "string", "title": "Type" },
					"deletable": {
						"anyOf": [{ "type": "boolean" }, { "type": "null" }],
						"title": "Deletable"
					},
					"procedure": {
						"anyOf": [
							{
								"$ref": "#/components/schemas/lib__visit__model__schemas__ProcedureRead"
							},
							{ "type": "null" }
						]
					},
					"medic": {
						"anyOf": [{ "$ref": "#/components/schemas/MedicRead" }, { "type": "null" }]
					},
					"device": {
						"anyOf": [{ "$ref": "#/components/schemas/DeviceRead" }, { "type": "null" }]
					},
					"preparation": {
						"anyOf": [
							{ "$ref": "#/components/schemas/PreparationRead" },
							{ "type": "null" }
						]
					},
					"city": {
						"anyOf": [{ "$ref": "#/components/schemas/CityRead" }, { "type": "null" }]
					},
					"photos": {
						"anyOf": [
							{
								"items": { "$ref": "#/components/schemas/PictureForVisitRead" },
								"type": "array"
							},
							{ "type": "null" }
						],
						"title": "Photos"
					},
					"clinic": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ClinicInVisitRead" },
							{ "type": "null" }
						]
					},
					"confirmations": {
						"anyOf": [
							{ "$ref": "#/components/schemas/ConfirmationsRead" },
							{ "type": "null" }
						]
					}
				},
				"type": "object",
				"required": [
					"id",
					"user_id",
					"record_date",
					"record_time",
					"type",
					"procedure",
					"city",
					"photos"
				],
				"title": "VisitUserRead"
			},
			"VisitUserUpdate": {
				"properties": {
					"name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Name"
					},
					"record_date": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Record Date"
					},
					"clinic_name": {
						"anyOf": [{ "type": "string" }, { "type": "null" }],
						"title": "Clinic Name"
					},
					"device_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Device Id"
					},
					"preparation_id": {
						"anyOf": [{ "type": "integer" }, { "type": "null" }],
						"title": "Preparation Id"
					}
				},
				"type": "object",
				"title": "VisitUserUpdate"
			},
			"lib__procedure__model__schemas__ProcedureRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" },
					"devices": {
						"items": { "$ref": "#/components/schemas/ProcedureDeviceRead" },
						"type": "array",
						"title": "Devices"
					},
					"preparations": {
						"items": { "$ref": "#/components/schemas/ProcedurePreparationRead" },
						"type": "array",
						"title": "Preparations"
					},
					"specializations": {
						"items": { "$ref": "#/components/schemas/ProcedureSpecializationRead" },
						"type": "array",
						"title": "Specializations"
					}
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProcedureRead"
			},
			"lib__visit__model__schemas__ProcedureRead": {
				"properties": {
					"id": { "type": "integer", "title": "Id" },
					"name": { "type": "string", "title": "Name" }
				},
				"type": "object",
				"required": ["id", "name"],
				"title": "ProcedureRead"
			}
		},
		"securitySchemes": {
			"APIKeyCookie": { "type": "apiKey", "in": "cookie", "name": "fastapiusersauth" }
		}
	}
}
